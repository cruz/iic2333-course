---
title: 0 - Caracterización de Sistemas Operativos
layout: slide
---



section

    h2 ¿Para qué un Sistema Operativo?

    section

	section
		div Queremos ejecutar un código como esto

		img src='/images/figures/00-main.png' width="20%" style="background:none; border:none; box-shadow:none; vertical-align:middle;" 
		div.fragment data-fragment-index="1" style="border:none; width:20%; vertical-align:middle; display:inline-block;" más bien esto
		div.fragment data-fragment-index="1" style="border:none; width:30%; vertical-align:middle; display:inline-block;"
			img src='/images/figures/00-compiled.png' width="70%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div
			div.fragment data-fragment-index="2" style="border:none; width:30%; vertical-align:middle; display:inline-block; horizontal-align:right;" Y para eso tenemos:
			div.fragment data-fragment-index="2" style="border:none; width:25%; vertical-align:middle; display:inline-block;"
				img src='/images/figures/00-motherboard.jpg' width="100%" style="background:none; border:none; box-shadow:none;"

		div.fragment data-fragment-index="2" style="font-size:12px;" Source: https://www.soundonsound.com/techniques/installing-new-pc-motherboard


    section 
		div style="border:none; width:50%; vertical-align:middle; display:inline-block;" 

			div style="border:none;horizontal-align:left;" <i>Hardware</i> ejecuta ciclos de instrucciones
			ul style="font-size:28px;horizontal-align:left;"
				li <i>Fetch</i>
				li <i>Decode</i>
				li <i>Execute</i>
			
			br
			br
			div <i>Hardware</i> ejecuta programas (código) compilado
			
			ul.fragment data-fragment-index="1" style="font-size:28px;"
				li ¿Cuál programa? ¿En qué orden?
				li ¿Un programa a la vez?
				li ¿En qué región de memoria?
				li ¿Cómo utiliza los dispositivos de I/O?

		/img src='/images/figures/00-basic-ic.jpg' width="35%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
		img src='/images/figures/00-instructioncycle-opt.svg' width="20%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
			
    section
    	div El computador es una máquina programable (léase "reconfigurable") &hellip;

    	div style="font-size:24px;" &hellip; pero electrónicamente compleja

		div 
			/img src='/images/figures/00-arqui.png' width="50%" style="background:none; border:none; box-shadow:none;"
			img src='/images/figures/00-vonneumann-opt.svg' width="35%" style="background:none; border:none; box-shadow:none;"

		div.fragment data-fragment-index="1" Cuando ejecutamos un programa ...
		ul.fragment data-fragment-index="1" style="font-size:24px;"
			li No nos preocupamos del <i>hardware</i> del computador
			li No tenemos que esperar que otro programa termine para que el nuestro ejecute
			li No especificamos qué región de la memoria va a utilizar
			li No decidimos en que bloques del disco está almacenado

		blockquote.fragment data-fragment-index="2" style="background:#B7E1CD;"Porque afortunadamente existe el <b>Sistema Operativo</b> &#x1f605;

		div.fragment data-fragment-index="2" style="font-size:18px;" Afortunadamente también tenemos compiladores, pero en este curso alabaremos al sistema operativo













section

	h2 Estructura de un Sistema Operativo
		
	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%"

		div ¿Dónde vive el Sistema Operativo?

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			div.fragment data-fragment-index="1" Sistema Operativo <b>ES</b> <i>software</i>
			div.fragment data-fragment-index="1" Sistema Operativo <b>habla con</b> el <i>hardware</i>
			br
			div.fragment data-fragment-index="2" El <b>Sistema Operativo</b> es nuestro <b>servidor</b> más importante
			ul.fragment data-fragment-index="3" style="font-size:36px;"
				li Nos <b>protege</b> de los detalles del <i>hardware</i>
				ul.fragment data-fragment-index="4" style="font-size:20px;"
					li ¿Un core, dos core?, ¿4GB RAM?, ¿disco SSD?, &hellip; úselo no más, yo me encargo
				li Nos permite <b>compartir recursos</b> con otros programas
				ul.fragment data-fragment-index="4" style="font-size:20px;"
					li ¿Quiere navegar, tocar música, jugar WoW, compilar su tarea, todo al mismo tiempo? No se preocupe
				li Nos ofrece <b>servicios</b> para hacer más cómodo el uso del <i>hardware</i>
				ul.fragment data-fragment-index="4" style="font-size:20px;"
					li Escritura y lectura de disco, envío de mensajes por red, acceso a su pendrive USB, y todo eso &hellip; con una interfaz gráfica

			/div.fragment ¿Interactuamos con el sistema operativo? <span class="fragment">... ¿o con <i>shell</i>s o GUIs?</span>
			/br
			/div.fragment ¿<i>User mode</i>?, ¿<i>Kernel mode</i>? <span class="fragment">... Solo el Sistema Operativo puede utilizar el <i>Kernel mode</i></span>

			blockquote.fragment data-fragment-index="5" style="background:#B7E1CD;"Nos permite <b>usar</b> el computador &#x1f603;

			div.fragment data-fragment-index="5" style="font-size:14px;" ¿Como no querer/estudiar a nuestro sistema operativo?


		/img src='/images/figures/00-os-location.jpg' width="50%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 

			img src='/images/figures/00-monkey-user.gif' width="50%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

			img src='/images/figures/00-oslayers-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"

		div ¿Qué esperamos de un sistema operativo?

		div ¡TODO lo bueno!

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 


			ul 
				li Que sea <b>confiable</b> (<i>reliable</i>)
				ul style="font-size:20px;"
					li "Que no se caiga/bloquee/cuelgue"
				li Que mis programas ejecuten rápidamente
				ul style="font-size:20px;"
					li "Para eso tengo mis 8 core y mis 128GB RAM"
					li "Así puedo jugar, compilar, ver películas, etc. al mismo tiempo"
				li Que no gaste todos los recursos (CPU, memoria, disco)
				ul style="font-size:20px;"
					li "Este Windows/Linux/MacOSX cada vez consume más"				
				li Que mis datos estén seguros: que no me hackeen
				li Que mis programas sigan funcionando después de una actualización
				li Que me permita usar el computador (que no me moleste)
	
		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 


			img src='/images/figures/00-oslayers-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"


	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"

		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div Debe cumplir varios roles

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 


			ul 
				li Debe ser un <b>administrador de recursos</b>
				ul style="font-size:20px;"
					li ¿A quién le toca ejecutar? ¿Qué recursos necesita?
					li ¿Qué CPU uso? ¿En qué disco escribo?
					li Sistema Operativo <b>multiplexa</b> recursos escasos entre múltiples usuarios
				li Debe ser capaz de <b>proteger</b> los recursos
				ul style="font-size:20px;"
					li "No tiene permisos para leer/escribir esos archivos"
					li "No intente leer la memoria de otro proceso"
					li "¿Quién es este usuario?"
				li Debe ser capaz de <b>abstraernos</b> de los detalles del <i>hardware</i>
				ul style="font-size:20px;"
					li Permite que el sistema se vea como una máquina única
					li ¿AMD, Intel, Samsung, Seagate?, no importa, aquí tiene una máquina con: CPU, memoria y disco.
					li Provee una <b>interfaz</b> para poder usar apropiadamente el <i>hardware</i>
					li Sistema Operativo <b>virtualiza</b> recursos para hacernos creer que hay más
	
		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 


			img src='/images/figures/00-oslayers-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div El sistema operativo es como el <b>gobierno</b> &hellip; no sirve para nada por sí solo &hellip;

		div &hellip; pero es <b>fundamental</b> para que podamos usar programas


	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"

		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div ¿Qué hay dentro de un sistema operativo?

		div style="border:none; width:30%; vertical-align:middle; display:inline-block; text-align:left;" 

			ul 
				li Administración de procesos
				li Manejo de memoria
				li Sistemas de archivos
				li Protección y seguridad
				li Control de I/O

		div style="border:none; width:30%; vertical-align:middle; display:inline-block; text-align:left;" 

			ul 
				li Manejo de errores
				li Comunicación inter-procesos
				li Contabilidad / <i>logging</i>
				li Controladores (<i>drivers</i>)
				li etc &hellip;


		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 


			img src='/images/figures/00-oslayers2-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div Programas utilizan <b>servicios</b> del sistema operativo. ¿Cómo los invocan?


	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"

		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div ¿Cómo se invocan los servicios del sistema operativo?

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" Sistema operativo provee una interfaz de <b>llamadas al sistema</b> (<i>syscalls</i>)
			br
			ul style="font-size:24px;"
				li Cada vez que un programa desea solicitar algo al sistema operativo, debe invocar una <i>syscall</i>
				li "Por favor, sistema operativo, haz esto por mi"
				li Cada sistema operativo puede proveer un conjunto distinto de <i>syscalls</i>
				li Sistemas operativos proveen bibliotecas (<i>libraries</i>) en algún lenguaje de programación (C) para invocar <i>syscalls</i>.


		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 


			img src='/images/figures/00-oslayers3-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div Sin embargo, cuando interactuamos con el computador no escribimos <i>syscalls</i>


	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"

		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div ¿Cómo interactuamos con el sistema operativo?

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" Sistema operativo provee <b>interfaces de usuario</b> (<i>user interface</i>) que enmascara <i>syscalls</i>
			ul style="font-size:24px;"
				li Ofrecen un entorno más "amigable" para usar el computador
				li ¿Son parte del sistema operativo?
			br
			div style="text-align:left;" Distintas maneras de interactuar con el sistema operativo
			ul style="font-size:24px;"
				li <b>Interfaces gráficas</b>: <b>GUI</b> (<i>Graphical User Interface</i>)
				li <b>Intérprete de comandos</b> (<i>Command Line</i>)
				li <b>Batch</b> (lotes): secuencias de comandos no-interactivas
			
		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 


			img src='/images/figures/00-oslayers4-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"


	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"

		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div Interfaces gráficas: GUI

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" GUIs ofrecen un entorno basado en abstracciones (ventanas, punteros) para interactuar con el sistema operativo
			img src='/images/figures/00-CDE.png' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"	
			img src='/images/figures/00-XFCE.png' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"	
			/img src='/images/figures/00-GNOME.png' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"	
			img src='/images/figures/00-tonystark.gif' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"	
			img src='/images/figures/00-KDE.png' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"	
			img src='/images/figures/00-windows.png' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"	
			img src='/images/figures/00-macosx.jpg' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"	

		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 


			img src='/images/figures/00-oslayers4-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"



	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"

		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div Intérprete de comandos / linea de comandos / <i>command line</i>
		div style="font-size:12px;" menos preciso: <i>shell</i>, terminal, consola, xterm, prompt

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			div
				ul
					li UNIX/Linux/MacOSX: <code>sh</code>, <code>csh</code>, <code>tcsh</code>, <code>ksh</code>, <code>bash</code>, <code>zsh</code>
					li MS-DOS/Windows: <code>COMMAND.COM</code>, <code>cmd.exe</code>, PowerShell

			div 
				img src="/images/figures/00-bash.png" width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
				img src="/images/figures/00-hacker-console.gif" width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
				img src="/images/figures/00-zsh.png" width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
				img src="/images/figures/00-commandcom.jpg" width="40%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
				img src="/images/figures/00-powershell.png" width="40%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 
			img src='/images/figures/00-oslayers4-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"


	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"
		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div Intérprete de comandos / linea de comandos / <i>command line</i>
		div style="font-size:12px;" menos preciso: <i>shell</i>, terminal, consola, xterm, prompt

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 
			ul
				li Solicitar comando/instrucción al usuario y ejecutarlo
				li <code>prompt comando [parametros]</code>

			div
				p <em>Command Prompt</em> (símbolo del sistema)
				ul.fragment
					li Indica que el sistema está lista para recibir un comando
					li Usualmente un texto terminado en <code>$, %, #, :, ></code>

			div.fragment
				pre
					code.hljs.shell
						| cruz$ ls
						 
						 jabaier@grima$ cp clase-01.tex backup/
						 
						 jnavon@www[15:35]:> rm tareaSistOp.*
						 
						 dietr1ch@nb# ~/SO/Tareas
						 ls -d */ | parallel --tag 'cd {} && make'

		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 
			img src='/images/figures/00-oslayers4-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div Hay <a href="https://en.wikipedia.org/wiki/List_of_command-line_interpreters" target="_blank">muchas alternativas</a>



	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"
		div El sistema operativo es un <i>software</i> <b>complejo</b>


		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 
			blockquote style="background: #F4C7C3;" El <b>kernel</b> (núcleo, supervisor)

			div style="text-align:left;" El código fundamental del sistema operativo.
			ul style="font-size:24px;"
				li Es <i>software</i>
				li Suele ser lo más pequeño posible (o no)

			div style="text-align:left;" Tiene completo control sobre el sistema (<i>hardware</i>)
			ul style="font-size:24px;"
				li Es el único programa que ejecuta en un <b>modo privilegiado</b>
				li También conocido como <b>modo monitor</b>, <b>modo kernel</b>, <b>modo sistema</b>
				li Todo lo que no es parte del <i>kernel</i>, ejecuta en <b>modo usuario</b>

			div style="text-align:left;" Sistema operativo incluye herramientas (programas) que facilitan la labor del kernel, pero que no son fundamentales

		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 
			img src='/images/figures/00-oslayers5-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		blockquote.fragment style="background: #B7E1CD;" Sistema Operativo = Kernel + Programas del Sistema



	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%" data-transition="fade"
		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div ¿De qué tamaño es todo esto?

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			ul.fragment
				li MacOSX (Tiger, 2005): \( \sim 86 \times 10^6 \) líneas de código
				li Windows 10: \( \sim 50\times 10^6 \) líneas de código
				li <a href="https://www.linuxcounter.net/statistics/kernel">Linux</a> 4.14: \( \sim 20\times 10^6 \) líneas de código
				ul style="font-size:14px;"
					li Version 1.0.0 (Marzo 1994) tenía 176250 líneas
					li Kernel Linux está en archivo <code>vmlinuz</code> (Virtual Memory LINUx gZip)
				li ChromeOS: \( 17 \times 10^6 \) líneas de código
				li MINIX 3: \( \sim 12000 \) líneas de código

			div.fragment Más <a href="http://www.informationisbeautiful.net/visualizations/million-lines-of-code">comparaciones</a> y <a href="https://en.wikipedia.org/wiki/Comparison_of_operating_systems">más aún</a>
	
		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 
			img src='/images/figures/00-oslayers5-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"


	section data-background-image='/images/figures/00-os-list.png' data-background-size="50%"

		div El sistema operativo es un <i>software</i> <b>complejo</b>

		div A veces fallan ... 

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" Errores y vulnerabilidades pueden deberse a una combinación entre el <i>hardware</i> y el sistema operativo
			ul
				li O en las herramientas del <i>kernel</i>

			div 
				<a href="http://heartbleed.com/"><img src="/images/figures/00-heartbleed.png" width="20%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"></a>
				<a href="https://meltdownattack.com/"><img src="/images/figures/00-meltdown-spectre.png" width="40%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"></a>
				<a href="https://www.statista.com/chart/7478/android-is-the-most-vulnerable-operating-system/"><img src="/images/figures/00-vulnerabilities.jpg" width="40%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"></a>

	
		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 

			img src='/images/figures/00-oslayers5-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div <a href="https://cve.mitre.org/">Common list of Vulnerabilities and Exposures (CVE)</a>










section

	h2 Arquitecturas de <i>kernel</i>
		
	section 

		div ¿Cómo se organiza el <i>kernel</i>?

		div style="border:none; width:60%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" Muchos componentes a integrar
			ul style="font-size:28px;"
				li Primeros sistemas operativos empezaron pequeños y luego crecieron
				li No tenían mucha estructura

			div style="text-align:left;" MS-DOS (1981)
			ul style="font-size:28px;"
				li Sistema <b>monolítico</b> (un gran <i>kernel</i> estático)
				li Programas de usuario podían acceder directamente al <i>hardware</i>
				li <i>Hardware</i> (Intel 8088) no proveía modos de protección

			img src='/images/figures/00-2_11.pdf.png' width="40%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"


		div style="border:none; width:40%; vertical-align:middle; display:inline-block;" 


			img src='/images/figures/00-oslayers5-opt.svg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"












section
	h2 Evolución de los Sistemas Operativos

	section

		p Érase una vez ...

		div.fragment style="display:inline-block; width=50px"
			div Charles Babbage (1791-1871) and the Analytical Engine
			div
				img src='/images/figures/00-babbage.jpg' width="20%"  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
				img src='/images/figures/00-babbage-analytical.jpg' width="25%" 

		div.fragment Primer diseño de <i>computador digital</i> ... <span class="fragment">aunque nunca lo terminó</span>

	section 
		
		div style="display:inline-block; width=50px"
			div Ada Lovelace (1815-1852) and the First Algorithm
			div
				img src='/images/figures/00-AdaLovelace.jpg' width="20%" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
				img src='/images/figures/00-AdaLovelace-algorithm.jpg' width="40%" 
		/div.fragment style="display:inline-block; width=50px"
			/div style="display:inline-block;" and the First Algorithm

		div.fragment La primera programadora... <span class="fragment">su programa calculaba los números de Bernoulli usando la Analytical Engine</span>


	section
		h3 Primera Generación (1945-55): Tubos de vacío

		p Colossus Mark 2 @ Bletchley Park (incluyendo a Alan Turing)
		div
			img src='/images/figures/00-colossus.jpg' width="60%"

		div Primeros computadores digitales <b>electrónicos</b> ... programables, pero no de propósito general (no Turing-complete)


	section data-transition="fade"
		h3 Primera Generación (1945-55): Tubos de vacío

		p ENIAC @ U.Pennsylvania
		div
			img src='/images/figures/00-ENIAC.jpg' width="40%"

		div Primeros computadores programables de <i>propósito general</i>


	section data-transition="fade"

		h3 Primera Generación (1945-55): Tubos de vacío
		
		div
			img src='/images/figures/00-eniac-programming.jpg' width="40%"

		ul
			li Programación via conexión de cables (y luego, tarjetas perforadas)
			li No existían los lenguajes de programación (ni siquiera assembler)
			li Aprox. 20000 tubos de vacío

	section 
		h3 Segunda Generación (1955-65): Transistores y Sistemas <i>Batch</i>

		p Separación de roles: diseñador, constructor, programador, operador, mantenedor

		p <b>Mainframes</b>

		div
			img src='/images/figures/00-ibm1401.jpg' width="35%"

		p IBM1402 (card reader), IBM1401 (processing), IBM1403 (printer)


	section data-transition="fade"
		/h3 Segunda Generación (1955-65): Transistores y Sistemas <i>Batch</i>

		p Modo de operación: ejecución de un <b>job</b>
		ul
			li Programador escribe en FORTRAN (tarjetas perforadas) y entrega a operador
			li IBM1401 pasa tarjetas a cinta (operador lleva cinta a IBM7094)
			li IBM7094 procesa cinta (operador lleva cinta a IBM1403)
			li IBM1403 imprime resultados

		div
			img src='/images/figures/00-ibm7094.jpg' width="30%"
		p IBM7094

	section data-transition="fade"
		/h3 Segunda Generación (1955-65): Transistores y Sistemas <i>Batch</i>
		div
			img src='/images/figures/00-batch-manual.png' width="60%"

		p Proceso de <i>trabajo por lotes</i>, <b>batch</b>
		ul
			li Lenguajes: assembler y FORTRAN (primer lenguaje de programación)
			li Sistema Operativo: FMS (Fortran Monitor System)
			li Sistema Operativo: IBSYS (para el IBM7094)


	section
		h3 Tercera Generación (1965-1980): Circuitos Integrados y Multiprogramación

		p IBM unifica sus <i>mainframes</i> en System/360. Misma arquitectura e <i>instruction set</i>.

		blockquote style="background: #B7E1CD;" Primeros en utilizar <b>circuitos integrados</b>

		div
			img src='/images/figures/00-ibms360.jpg' width="40%"


	section data-transition="fade"
		h3 Tercera Generación (1965-1980): IC y Multiprogramación

		div style="border:none; width:50%; vertical-align:middle; display:inline-block;" 

			div Si el <i>hardware</i> está unificado, ¿por qué no el <i>software</i>?
			div style="background:#B7E1CD;" <b>OS/360</b> (Fred Brooks)
			div style="border:none;" Mientras se procesa I/O, la CPU no realizaba trabajo
			div style="background:#B7E1CD;" OS/360 introduce la <b>multiprogramación</b>
			

		img src='/images/figures/00-ibm360.jpg' width="35%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		ul.fragment
			li Particionamiento de la memoria
			li Si un proceso no está ocupando la CPU, se entrega a otro

		p.fragment Posibilidad de cargar un programa de tarjeta a memoria en el momento que un espacio queda libre

		blockquote.fragment style="background: #B7E1CD;" Simultaneous Peripheral Operation On Line <b>SPOOLing</b>



	section data-transition="fade"
		h3 Tercera Generación (1965-1980): IC y Multiprogramación

		p Usuarios aún deben esperar horas para obtener un resultado. ¿Y si hay error de compilación?

		p <b>Solución</b>: que múltiples usuarios puedan utilizar el computador simultáneamente

		blockquote.fragment style="background: #B7E1CD;" <b>Timesharing</b>

		p.fragment Cada usuario posee un terminal para entregar comandos al computador.

		ul.fragment
			li <b>CTSS</b> (<i>Compatible Time Sharing System</i>), MIT.
			li Primer sistema de <i>timesharing</i> de propósito general.
			li <b>Problema</b>: usuarios deben tener cuidado de no alterar el trabajo de otros

	section data-transition="fade"
		h3 Tercera Generación (1965-1980): IC y Multiprogramación

		div style="border:none; width:70%; vertical-align:middle; display:inline-block;" 

			div MIT, Bell Labs, General Electric, deciden crear un sistema que soporte cientos de usuarios, inspirados en el modelo de la red eléctrica.
			div style="background:#B7E1CD;" <b>MULTICS</b> (<b>MULT</b>iplexed <b>I</b>nformation and <b>C</b>omputing <b>S</b>ervice)
			div style="border:none;" Escrito en lenguaje <b>PL/I</b> (poco popular y con un compilador deficiente)
			div Bell Labs y General Electric abandonan
			

		img src='/images/figures/00-multics.jpg' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		blockquote.fragment <b>Visión de MULTICS</b>: sistema de computación que pueda ser accedido por múltiples usuarios, en que el <i>mainframe</i> ejecuta todo, y usuarios acceden a través de terminales "livianos"


	section data-transition="fade"
		h3 Tercera Generación (1965-1980): IC y Multiprogramación

		div <b>DEC</b> (<i>Digital Equipment Corporation</i>) produce su serie de minicomputadores, desde <b>PDP-1</b> al <b>PDP-11</b>

		div style="width:80%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" <i>1970</i>. Ken Thompson y Dennis Ritchie escriben una versión reducida de MULTICS para un PDP-7 abandonado.
			div style="background:#B7E1CD;"Al ser un MULTICS reducido, lo llaman UNICS, y finalmente <b>UNIX</b>
			div style="text-align:left;" <i>1972</i>. Dennis Ritchie reescribe el código de Unix en <b>C</b>
			div style="text-align:left;" Surgen muchas versiones (incompatibles entre sí), pero dos sobreviven
			ul
				li <b>System V</b>, de AT&T
				li <b>BSD</b> (Berkeley Software Distribution) de U.C.Berkeley.
			
		div style="width:20%; vertical-align:middle; display:inline-block;"
			img src='/images/figures/00-unix.gif' width="65%" style="background:none; border:none; box-shadow:none; display:block;"

			img src='/images/figures/00-ThompsonRitchie.jpg' width="65%" style="background:none; border:none; box-shadow:none; display:block;"

		div style="text-align:left;" <i>1987</i>. Andrew Tanenbaum desarrolla una versión simplificada con objetivos educacionales: <b>MINIX</b>
		div style="text-align:left;" <i>1988</i>. IEEE desarrolla una interfaz estándar: <b>POSIX</b>
		div style="text-align:left;" <i>1991</i>. Linus Torvalds, inspirado en MINIX, escribe su propia versión: <b>LINUX</b>



	section 
		h3 Cuarta Generación (1980-): Computadores Personales

		p LSI (Large Scale Integration) posibilita la construcción de miles de transistores en 1cm2. 
		
		blockquote.fragment style="background: #B7E1CD;" Surgen los computadores personales, o <b>microcomputadores</b>

		ul
			li.fragment <i>1974</i>. <b>Intel 8080</b>. Primera CPU de propósito general de 8-bit. <b>No tiene sistema operativo</b>.
			li.fragment Gary Kildall, consultor, escribe <b>CP/M</b> (<i>Control Program for Microcomputers</i>) en un diskette de 8''.
			li.fragment Intel no se interesa, y entrega CP/M de vuelta a Gary Kildall.
			li.fragment <i>1977</i>. Gary Kildall funda <b>Digital Research</b> y adapta CP/M para otras CPU.
			li.fragment <i>1980</i>. IBM crea <b>IBM PC</b> (Intel 8088). Usa un intérprete de BASIC de ... <span class="fragment"><b>Bill Gates</b></span>
			li.fragment IBM PC no tiene Sistema Operativo. Bill Gates sugiere que contacten a Gary Kildall
			li.fragment Kildall rechaza a IBM. IBM solicita un Sistema Operativo a Bill Gates.
			li.fragment Bill Gates compra <b>DOS</b> (<i>Disk Operating System</i>) a <b>Seattle Computer Products</b>, y lo ofrece a IBM.
			li.fragment Bill Gates contrata a Tim Paterson en su nueva compañía, <b>Microsoft</b>, y producen <b>MS-DOS</b>
			li.fragment MS-DOS se populariza al ser ofrecido a empresas de computación y no a usuarios.


	section data-transition="fade"
		/h3 Cuarta Generación (1980-): Computadores Personales

		div style="width:65%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" <i>1983</i>. IBM lanza <b>IBM PC/AT</b>, con Intel 80286 y MS-DOS.
			div style="text-align:left;" MS-DOS ampliamente usado con Intel 80386 y 80486.
			div style="text-align:left;" Tanto CP/M como MS-DOS usan una <b>shell</b> como interacción.
			
		img src='/images/figures/00-msdos.png' width="35%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div <i>1960's</i> Doug Engelbart (1925-2013) Stanford Research Institute, crea las <b>GUI</b> (<i>Graphical User Interface</i>)

		div style="width:80%; vertical-align:middle; display:inline-block;" 

			div style="text-align:left;" <i>1968</i>. <a href="https://www.youtube.com/watch?v=yJDv-zdhzMY">Mother of all demos</a>. Engelbart presenta <i>windows</i>, <i>hypertext</i>, <i>mouse</i>, ...
			div style="text-align:left;" GUIs empiezan a ser usadas en XEROX PARC (Palo Alto Research Center)
			div style="text-align:left;" Steve Jobs conoce la GUI en XEROX PARC y la incorpora en Apple Macintosh

		img src='/images/figures/00-mouse.jpg' width="20%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

		div <b>GUI</b>s atraen a usuarios que no saben (ni les interesa) el funcionamiento del computador.


	section data-transition="fade" 
		h3 Cuarta Generación (1980-): Computadores Personales

		blockquote style="background: #B7E1CD;" Microsoft adopta GUIs: <b><a src="https://www.youtube.com/watch?v=U7PxUYnbOf4">Windows</a></b>

		div style="width:70%; vertical-align:middle; display:inline-block;" 

			ul.fragment
				li <i>1985-1995</i>. MS-DOS ejecuta Windows como aplicación de usuario
				li <i>1995</i>. <b>Windows 95</b> reemplaza a MS-DOS.
				li <b>Windows 95</b> y <b>Windows 98</b> mantienen código assembler Intel 16-bit.
				li Microsoft reescribe Windows para 32-bit. <b>Windows New Technology</b>: <b>Windows NT</b>
				li <i>1999</i>. <b>Windows NT 4.0</b> y <b>Windows 2000</b>, ámbito corporativo.
				li <i>2000</i>. <b>Windows Me</b> termina con la línea de Windows 95/98.
				li <i>2001</i>. Windows 2000 evoluciona a <b>Windows XP</b>.
				li Línea server: Windows 2003 Server, Windows 2008.
				li Línea client: Windows Vista, Windows 7, Windows 8, Windows 10.

		img src='/images/figures/00-windows.png' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

	section data-transition="fade" 
		/h3 Cuarta Generación (1980-): Computadores Personales

		blockquote style="background: #B7E1CD;"  Evolución de <b>UNIX</b>

		div style="width:80%; vertical-align:middle; display:inline-block;" 

			ul.fragment
				li <b>UNIX</b> popular en ambiente de servidores. 
				li <b>Linux</b> crece en computadores personales.
				li <i>1993</i>. <b>FreeBSD</b> deriva de BSD. <b>OSX</b> es una versión modificada de FreeBSD.
				li MIT produce un sistema de ventanas para UNIX: <b>X Windows System</b> (luego X11, Xorg).
				li UNIX adopta GUIs que funcionan sobre X11 (Gnome, KDE, XFCE, etc)
				li Múltiples <a href="http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.png">distribuciones de Linux</a>

		img src='/images/figures/00-linuxes.png' width="20%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
	
		img src='/images/figures/00-linux.jpg' width="30%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"


	section 
		h3 Quinta Generación (1980-): Computadores Móviles

		blockquote style="background: #B7E1CD;" Evolución de dispositivos móviles

		div style="width:75%; vertical-align:middle; display:inline-block;" 

			ul.fragment
				li <i>1946</i>. Primer teléfono móvil. 40 kg.
				li <i>1970</i>. Teléfono móvil de 1 kg. (ladrillo)
				li <i>1990s</i>. Nokia combina teléfono con PDA (Personal Digital Assistant)
				li <i>2001</i>. Primeros sistemas operativos para móviles: SymbianOS
				li <i>2002</i>. RIM. Blackberry OS
				li <i>2007</i>. Apple. iOS.
				li <i>2008</i>. Google. Android. Basado en Linux.
				li <i>2009</i>. WebOS. Para dispositivos <i>smart</i>
				li <i>2011</i>. Nokia cambia SymbianOS por Windows Phone.
				li <i>2013</i>. Samsung reemplaza Bada por Tizen.

		div style="width:25%; vertical-align:middle; display:inline-block;"
		
			img src='/images/figures/00-simon.jpg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"

			img src='/images/figures/00-mobiles.jpg' width="100%" style="background:none; border:none; box-shadow:none; vertical-align:middle;"
		




section
	h2 ¿Cómo funciona el Sistema Operativo?
	
	p El Sistema Operativo está siempre en ejecución <span class="fragment">¿y el usuario?</span>

	blockquote.fragment style="background: #F4C7C3;" Los Sistemas Operativos son manejados por <b>interrupciones</b> / <b>traps</b>.

	p.fragment Mientras nadie (usuario/programa) lo llame, el Sistema Operativo no hace nada.
	ul.fragment
		li <em>Trap</em>: interrupción generada por software
		
		li Sistema Operativo debe controlar que: 
		ul
			li Procesos puedan acceder a datos
			li Procesos no puedan monopolizar la CPU
			li Procesos no puedan modificar (intencionalmente o no) el funcionamiento de otro proceso

		li Solo el Sistema Operativo debe ser capaz de administrar el <i>hardware</i>, y no los procesos.



section
	h2 Modos de operación de un Sistema Operativo
	
	section

		br

		div 
			img src="/images/figures/00-1_10.pdf.png" width="60%" style="background:none; border:none; box-shadow:none;"

		p Modo dual suportado por hardware: mode bit (0=kernel/1=user)

		p <b>Solo puede ser modificado por el S.O.</b> (¿por qué?)
		p Kernel mode, a.k.a. (<i>Privileged</i> | <i>Supervised</i> | <i>Monitor</i> | <i>System</i>) mode

		blockquote.fragment style="background: #F4C7C3;" Instrucciones privilegiadas solo pueden ejecutar en modo <b>kernel</b>. <br/> Si se intenta ejecutar en modo <b>user</b>, el <i>hardware</i> no la ejecuta y genera una interrupción para el Sistema Operativo.

		p.fragment Ej: cambio mode bit, llamada I/O, manejo timer, manejo de interrupciones





section
	h2 Llamadas al sistema

	section
		h4 System Calls
		p Programas utilizan llamadas al sistema frecuentemente

		div ¿Qué debe hacer el Sistema Operativo antes este comando?

		p <code>copy source.txt dest.txt</code>

		ul
			li.fragment Abrir <code>source.txt</code> (¿posición en disco?, ¿existe?, ¿tiene permisos?,...)
			li.fragment Abrir <code>dest.txt</code> (¿existe?, ¿se reemplaza?, ¿se puede escribir?,...)
			li.fragment Leer <code>source.txt</code> (¿hacia qué parte de la memoria?)
			li.fragment Escribir <code>dest.txt</code> (¿desde qué posición de memoria?, ¿en qué posición del disco?,...)
			li.fragment Lectura/escritura en disco requiere llamadas al sistema
			li.fragment Terminar el programa en caso de error, requiere llamadas al sistema


	section
		h4 API: Application Programming Interface

		p Sistemas Operativos proveen una API para el programador.
		ul.fragment
			li Windows API (Win32), en <code>kernel32.dll</code>, <code>advapi32.dll</code>, <code>user32.dll</code>
			li POSIX API (UNIX, Linux, MacOS X), a través de <code>libc</code>
			li Java API (para la JVM)

		div 
			img src="/images/figures/00-LinuxAPI.png" width="35%" style="background:none; border:none; box-shadow:none;"
			img src="/images/figures/00-WinArch.png" width="35%" style="background:none; border:none; box-shadow:none;"

		/div.fragment
		/	pre style="width:50%;"
		/		code.hljs
		/			| count = read(fd, buffer, nbytes);

	section

		img src="/images/figures/00-2_06.pdf.png" width="60%" style="background:none; border:none; box-shadow:none;"

		/= image_tag "/images/figures/00-2_06.pdf.png", :style => 'max-width:60%; max-height:60%'

	section

		div
			pre style="width:50%;"
				code.hljs
					| count = read(fd, buffer, nbytes);

		img src="/images/figures/00-syscall-read.png" width="50%" style="background:none; border:none; box-shadow:none;"

		/= image_tag "/images/figures/00-syscall-read.png", :style => 'max-width:60%; max-height:60%'


	section

		div style="width:20%; vertical-align:middle; display:inline-block;" 

			div Algunas <i>syscalls</i> de POSIX. 

		div style="width:80%; vertical-align:middle; display:inline-block;" 

			img src="/images/figures/00-syscalls-posix.png" width="50%" style="background:none; border:none; box-shadow:none;"

		/= image_tag "/images/figures/00-syscalls-posix.png", :style => 'max-width:50%; max-height:50%'

	section

		div style="width:20%; vertical-align:middle; display:inline-block;" 

			div Equivalencias entre <i>syscalls</i> Win32 y POSIX

		div style="width:80%; vertical-align:middle; display:inline-block;" 

			img src="/images/figures/00-syscalls-posix-win32.png" width="70%" style="background:none; border:none; box-shadow:none;"

		/= image_tag "/images/figures/00-syscalls-posix-win32.png", :style => 'max-width:50%; max-height:50%'





		/p Para UNIX

		/div
			ul
				li <em>Bourne shell</em>: Stephen Bourne, 1977, UNIX, <code>sh</code>
				li <em>C shell</em>: Bill Joy, 1978, BSD UNIX, <code>csh</code>
				li <em>TENEX C Shell</em>: Ken Greer, 1983, <code>tcsh</code>
				li <em>Korn shell</em>: David Korn, 1983, <code>ksh</code>
				li <em>Bourne-Again shell</em>: Brian Fox, 1989, <code>bash</code>
				li <em>Z shell</em>: Paul Fastad, 1990, <code>zsh</code>

	/section
		h4 Graphical User Interface (GUI)

		p Interfaz gráfica (para quienes no les gusta escribir comandos)
		div.fragment
			ul
				li Usualmente con un <em>pointing-device</em> y ventanas
				li Métaforas: escritorio, íconos, carpetas, menúes
				li Más allá de <em>pointing-device</em>: gestos y acciones visuales

		p.fragment Vienen de 1968 (Douglas Engelbart), <a href="https://www.youtube.com/watch?v=yJDv-zdhzMY" target="_blank">Mother of All Demos</a>

		div.fragment
			ul
				li Investigación en Xerox Palo Alto Research Center (PARC)
				li Primera interfaz gráfica: 1973
				li Popularizados en 1980s: Apple Macintosh (Mac OS)
				li Windows 1.0 agregó GUI a MS-DOS


	/section
		h4 Graphical User Interface (GUI)

		p Tradicionalmente UNIX/Linux han sido manejados por CLI,
		p.fragment pero se han desarrollado muchas GUIs

		ul.fragment
			li CDE (<em>Common Desktop Environment</em>): Unix, OpenVMS
			li X-Windows Systems: Xfce, KDE, GNOME (Unix/Linux)
			li <a href="https://wayland.freedesktop.org/">Wayland</a>: Nueva API de GUI (Linux)

		= image_tag "/images/figures/00-Xwindows.png", :style => "max-width:50%;float:right;"
























section
	h2 Arquitectura

	section
		p ¿Sistemas <strong>monolíticos</strong> o sistemas <strong>modulares</strong>?
		p.fragment Algunos ni siquiera tienen estructura
		ul.fragment
			li MS-DOS: sistema monolítico simple
			li Nadie pensó que sería tan popular
			li Intel 8088 no tenía protección de <em>dual mode</em>
			li ¿Problemas? <span class="fragment">Seguridad</span>

		br
		= image_tag "/images/figures/00-2_11.pdf.png", :style=>"float;right; border:none;", :height=>"25%", :width=>"25%"

	section

		p UNIX: Estructura monolítica diseñada de acuerdo al <em>hardware</em>

		p Todo el sistema se diseña como un único programa.

		= image_tag "/images/figures/00-2_12.pdf.png", :width => '50%', :style=>"border:none;"

		p ¿Problemas? <span class="fragment">Dificultad de mantenimiento</span>



	section
	
		p Diseño por capas se diseñan por niveles más <em>abstractos</em> de funcionalidad

		div style="width:70%; vertical-align:middle; display:inline-block;" 

		ul
			li Capa \(M\) invoca llamadas sobre capa \(M-1\)
			li Ventaja: Facilidad de <em>debugging</em>
			li Desventaja: dificultad de definición de capas, eficiencia

		div style="width:30%; vertical-align:middle; display:inline-block;" 

		
			= image_tag "/images/figures/00-2_13.pdf.png", :width => '65%', :style=>"border:none;"

		br

		div style="width:50%; vertical-align:middle; display:inline-block;" 

			p.fragment THE (Technische Hogeschool Eindhoven), E. W. Dijkstra (1968) y estudiantes. 6 capas.

		div style="width:50%; vertical-align:middle; display:inline-block;" 
			
			= image_tag "/images/figures/00-THE.png", :width => '70%', :style=>"border:none;"


	section

		h4 Microkernels

		p <b>Mach</b>: versión de UNIX usando diseño de <em>microkernel</em> (CMU)

		div style="width:50%; vertical-align:middle; display:inline-block;" 

			ul.fragment
				li Set de funcionalidades mínimas
				li Otras funcionalidades agregadas como programas de usuario ¿dónde poner el límite?
				li Ventaja: Sistemas pequeño y fácil de portar
				li Desventaja: ¡Mucha más interacción a través de <em>syscalls</em>!
				li <b>Windows NT</b> usaba microkernel pero era más lento que Win95.
				li <b>GNU/Hurd</b> es más lento que Linux.

		div style="width:50%; vertical-align:middle; display:inline-block;" 

			= image_tag "/images/figures/00-2_14.pdf.png", :width=>'80%', :style=>"border:none;"

	section
	
		h4 Monolíticos vs Microkernels


		= image_tag "/images/figures/00-mono-micro.png", :width=>'90%', :style=>"border:none;"



	section
	
		p Monolíticos con extensiones: <strong>Loadable kernel modules</strong>

		ul
			li Kernel tiene un conjunto de componentes principales (<em>core</em>)
			li Módulos necesarios se agregan durante ejecución
			li Evita recompilar el kernel para cada nueva funcionalidad
			li Solaris, Linux, MacOS X, Windows
			li Ej: kernel con soporte de manejo de archivo + módulos por cada <em>filesystem</em>

		= image_tag "/images/figures/00-2_15.pdf.png", :width=>'50%', :style=>"border:none;"



	section
		h4 Híbridos

		p En la práctica, pocos sistemas pueden ser encasillados

		div style="width:50%; vertical-align:middle; display:inline-block;" 

			ul
				li Algunos tienen características monolíticas (performance!)
				li Pero algunas funcionalidades siguen el diseño de <em>microkernel</em>
				li ¡Y además permiten cargar módulos dinámicamente!
				li Windows NT, XNU (el kernel de Darwin) son monolíticos

		div style="width:50%; vertical-align:middle; display:inline-block;" 

			= image_tag "/images/figures/00-Win2000.svg", :width=>'50%', :style=>"border:none;"


/section
	h2 Use this for OS

	section
		div
			/https://xkcd.com/1508/
			img src='https://imgs.xkcd.com/comics/operating_systems.png' width="80%" style="background:none; border:none; box-shadow:none;"

	section
		div 
			img src="http://i1-news.softpedia-static.com/images/fitted/620x/this-windows-10-joke-just-won-the-internet-491641-7.jpg" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div 
			img src="https://i.pinimg.com/736x/5c/e5/77/5ce57717f273181f93eae308bf04163d--linux-funny-jokes.jpg" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="http://4.bp.blogspot.com/-X2i0Btn7Fjs/TV-_nNvQ1oI/AAAAAAAABoQ/Ogqyto4Ggi4/s1600/index_htm_m5c4d33af.png" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="https://imgs.xkcd.com/comics/cautionary.png" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="https://imgs.xkcd.com/comics/compiler_complaint.png" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="http://www.thinkgeek.com/images/blog/devotion_to_duty.jpg" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="https://tctechcrunch2011.files.wordpress.com/2011/10/dropbox-comic.jpg" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="http://redscourge.servehttp.com/jokes/funnypics/xkcd.com/abstraction.png" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="https://images.techhive.com/images/idge/imported/article/itw/2014/05/21/george-rr-martin-endorses-linux-game-of-thrones-100520296-orig.jpg" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="https://i.stack.imgur.com/m1rI9.png" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="https://qph.ec.quoracdn.net/main-qimg-10e4d6310bef083bb2670c126109c815" width="50%" style="background:none; border:none; box-shadow:none;"

	section
		div
			img src="https://imgs.xkcd.com/comics/windows_7.png" width="50%" style="background:none; border:none; box-shadow:none;"


/section
	h2 Use this for Networks

	section
		div
			/https://xkcd.com/1508/
			img src='https://moodle.polytechnique.fr/pluginfile.php/67042/course/summary/UDP%20Jokes.JPG' width="80%" style="background:none; border:none; box-shadow:none;"


